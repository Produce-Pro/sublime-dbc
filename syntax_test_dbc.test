. SYNTAX TEST "Packages/dbc/dbc.sublime-syntax"


     INC COMMON
.     ^ support.type.include.dbc
.         ^ meta.include.dbc string.unquoted
     INC TEST.VRB
.     ^ support.type.include.dbc
.         ^ meta.include.dbc string.unquoted

TEST$._ROUTINE ROUTINE VAR,VAR@,~LABEL:
. <- entity.name.function.routine.dbc
.               ^ storage.type.routine.start.dbc
.                      ^ variable.parameter.dbc
.                          ^ variable.parameter.dbc
.                                ^ variable.parameter.dbc
. commment
. <- comment.line.dbc punctuation.definition.comment.dbc
     VAR2,~LABEL2
.    ^ variable.parameter.dbc
.        ^ punctuation.separator.dbc
.          ^ variable.parameter.dbc

VAR.MAX$ EQU 2
. <- entity.name.constant
.         ^ storage.modifier.dbc
.            ^ constant.numeric.dbc

VAR_ CHAR 1[34,VAR.MAX$], INITIAL "YES","NO",1,3
. <- entity.name.type.dbc
.      ^ storage.type.dbc
.         ^ constant.numeric.dbc
.          ^ punctuation.section.brackets.begin.dbc
.           ^ constant.numeric.dbc
.               ^ variable.other.dbc
.                      ^ punctuation.section.brackets.end.dbc

VAR@ CHAR @
. <- entity.name.type.dbc
.      ^ storage.type.dbc
.         ^ storage.modifier.dbc

TEST_LABEL LABEL @
. <- entity.name.function.dbc
.            ^ storage.type.dbc
.                ^ storage.modifier.dbc
TEST_EXTERNAL EXTERNAL

FORMATTED_CHAR CHAR 30, INITIAL "YES"
UPDATE_CHAR EXTERNAL

SIZEX FORM 5.2

FORMATVERB VERB ARRAY=ANY,TYPE=CVAR,SIZE=NVAR,SIZE2=NVAR
. <- meta.function.dbc entity.name.function.verb.dbc - meta.function.parameters.dbc
.            ^ storage.type.verb.dbc
.                  ^ meta.function.parameters.dbc
.                      ^ meta.function.dbc meta.function.parameters.dbc

RANDOM.LABEL
. <- meta.function.dbc entity.name.function.label.dbc
     RETURN

.LIST@          LIST @

SOH$LST        LIST
.                 ^ meta.function.dbc meta.list.dbc storage.type.dbc
SOHSONO        CHAR 8        SONO          1-    8 S/O no
SOHCUST        CHAR 6        CUST          9-   14 Customer
SOHSHIP        CHAR 6        SHIP         15-   20 Ship to
SOHSLMN        CHAR 6        SLMN         21-   26 Salesperson
SOHSTAT        CHAR 1                     27-   27 Status (O/S/T/V)
SOHCASH        CHAR 1        YN           28-   28 Cash?
SOHOPFG        CHAR 1        YN           29-   29 Sales order contains open priced lines?
SOHCRCD        CHAR 1        CRCD         30-   30 Credit hold code
SOHCSPO        CHAR 25       CSPO25       31-   55 Customer P.O. number
SOHSVIA        CHAR 10       SVIA         56-   65 Ship via
SOHBTCH        CHAR 6        BTCH         66-   71 A/R batch
SOHARCP        CHAR 4        ARCOMP       72-   75 A/R company
SOHTRCD        CHAR 2        TRCD         76-   77 Terms code
SOHCMTX        CHAR 4        TXCD         78-   81 Customer tax code
SOHIVCD        CHAR 1        IVCD         82-   82 Invoice code
SOHDLDT        CHAR 8        DATE         83-   90 Expected delivery date
SOHPKDT        CHAR 8        DATE         91-   98 Pick date
SOHPKTM        CHAR 6        TIME         99-  104 Pick time
SOHSHDT        CHAR 8        DATE        105-  112 Ship date
SOHPDAM        FORM 9.2      AMNT9       169-  180 Product amount
. <- meta.function.dbc meta.list.dbc meta.type.dbc entity.name.type.dbc
.               ^ meta.function.dbc meta.list.dbc meta.type.dbc storage.type.dbc
SOHNBRI        FORM 6.2      QUAN        181-  189 Number of items
SOHLINS        FORM 3                    190-  192 Number of detail lines
SOHTACS        FORM 9.2      AMNT9       193-  204 Total actual cost
SOHSHCS        FORM 9.2      AMNT9       205-  216 Total shipping cost
SOHWGHT        FORM 7.3      WGHT        217-  227 Total weight
SOHNEWI        CHAR 1        YN          228-  228 New items added?
SOHBLDF        CHAR 1[3]     YN          229-  229 Build pending flag?
SOHIVCT        FORM 2                    230-  231 Invoice printed count
               LISTEND
.                  ^ meta.function.dbc meta.list.dbc storage.type.dbc


BOOL_TEST      FORM 1[3], 1,0,1
. <- meta.function.dbc meta.type.dbc entity.name.type.dbc
.               ^ meta.function.dbc meta.type.dbc storage.type.dbc
.                    ^ meta.function.dbc meta.brackets.dbc punctuation.section.brackets.begin.dbc
.                       ^^ meta.function.dbc storage.modifier.dbc
.                         ^ meta.function.dbc constant.numeric.dbc

     CALL SOMETHING
     MOVE 1 TO Y
     PACK Z WITH 2

     CLEAR SIZEX,SIZEX2,TYPE.FORM,TYPE
.    ^^^^^ support.function.builtin.dbc
.                                  ^^^ variable.other.dbc
     FILL " " IN TYPE
.    ^^^ support.function.builtin.dbc
.                 ^^^ variable.other.dbc
     LOOP
.    ^ meta.function.dbc meta.control.loop.dbc keyword.control.dbc
          GETPARM KEYWORD, VAR@
          UNTIL IF OVER
.         ^ meta.function.dbc  meta.control.loop.dbc keyword.control.dbc
.                   ^ meta.control.loop.dbc meta.control.if.dbc constant.language.dbc
          SWITCH KEYWORD[1]
.           ^ meta.control.loop.dbc keyword.control.dbc
.                    ^ meta.function.dbc variable.other.dbc
               CASE "ARRAY" | "DONE"
.               ^ meta.control.switch.dbc meta.control.case.dbc keyword.control.dbc
                    MOVEADR VAR TO VAR@
.                    ^ meta.function.dbc meta.control.loop.dbc meta.control.switch.dbc support.function.builtin.dbc
.                                  ^ variable.other.dbc
               CASE "TYPE"
                    MOVEADR VAR TO TYPE@
               CASE "SIZEX"
                    MOVEADR VAR TO SIZEX@
               CASE "SIZEX2"
                    MOVEADR VAR TO SIZEX2@
          ENDSWITCH
.          ^ meta.control.loop.dbc meta.control.switch.dbc keyword.control.dbc

          IF (CHOP CHAR2 = NULL AND NOT EOS)
               CLEAR FORM3
               BREAK
.               ^ meta.control.loop.dbc meta.control.if.dbc keyword.control.dbc
          ENDIF

          FOR FORM2 FROM 1 TO (FORM1 - 1)
.          ^  meta.control.loop.dbc keyword.control.dbc
               CONTINUE IF (CHOP (CHAR2 + SQUEEZE CHAR1) != NULL:
.                        ^  meta.control.for.dbc meta.control.if.dbc keyword.control.dbc
.                             ^  meta.parens.if.dbc support.function.builtin.dbc
.                                   ^ meta.parens.if.dbc meta.parens.if.dbc variable.other.dbc
.                                                         ^ keyword.operator.comparison.dbc
                    AND OVER)
.                   ^ meta.parens.if.dbc keyword.operator.word.dbc
               CALL UPDATE_CHAR WITH "LOOP",CHAR2
          REPEAT
.         ^  meta.control.for.dbc keyword.control.dbc

     REPEAT
.    ^  meta.control.loop.dbc keyword.control.dbc - meta.control.for.dbc


     FORMATVERB IN="TEST",OUT=FORMATTED_CHAR:
.     ^ meta.function-call.dbc variable.function.dbc
.               ^ variable.parameter.dbc
.                            ^ keyword.operator.assignment.dbc
.                               ^ variable.other.dbc
          FROM=WORK
.          ^ variable.parameter.dbc

     GOTO EXIT IF EOS

     CALL UPDATE_CHAR WITH "TEST",FORMATTED_CHAR,XXX=TYLER,CHAR4
.     ^ keyword.control.flow.dbc
.          ^ meta.function-call.dbc variable.function.dbc - meta.control.loop.dbc
.                      ^ meta.function.dbc support.type.dbc
.                            ^ meta.function.dbc
.                                   ^ meta.function.dbc variable.other.dbc

     CALL RANDOM.LABEL IF (OVER)

     RETURN IF EOS
.     ^ meta.function.dbc keyword.control.flow.dbc
.           ^ meta.control.if.dbc keyword.control.dbc

     FILL " " IN SIZEX,CHAR2,CHAR4
.      ^ support.function.builtin.dbc
.              ^ support.type.dbc
.                   ^ variable.other.dbc
.                              ^ variable.other.dbc
     TESTADR SIZEX@
     IF NOT OVER
.     ^ meta.function.dbc keyword.control.dbc
.         ^ constant.language.dbc
          CHOP SIZEX TO SIZEX
          MOVE (CHOP (SQUEEZE SIZEX)) TO SIZEX@
     ELSE IF OVER
.      ^  meta.control.if.dbc keyword.control.dbc
          MOVE SIZEX@ TO SIZEX
     ELSE IF (SIZEX ! 4.0 > 8 OR SIZEX != 0 OR SQUEEZE CHAR SIZEX)
.      ^  meta.control.if.dbc keyword.control.dbc
.            ^ meta.parens.if.dbc punctuation.section.parens.begin.dbc
.                   ^ keyword.operator.arithmetic.dbc
.                                            ^ keyword.operator.word.dbc
.                                               ^ support.function.builtin.dbc
.                                                              ^ variable.other.dbc
          CLEAR SIZEX
     ELSE IF (SIZE CHOP CHAR SIZEX)
          GOTO TEST.SECONDROUTINE IF EOS
     ENDIF
.      ^  meta.control.if.dbc keyword.control.dbc

     IF (VERSION ! 4 != "UNIX")
          TRAP $CLOCKDISPLAY IF TIMEOUT 1
     ENDIF

EXIT
     RETURN
.     ^ meta.function.dbc keyword.control.flow.dbc - meta.control.if.dbc

     CHAIN "CAEXIT"

TEST

     #IFDEF SOHDEF
.      ^ storage.modifier.dbc
.               ^ variable.other.dbc
TEST.SECONDROUTINE ROUTINE
. ^ meta.function.dbc entity.name.function.routine.dbc
.                   ^ meta.compiler-directive.dbc storage.type.routine.start.dbc
     ENDROUTINE
.     ^ meta.function.dbc meta.function.dbc storage.type.routine.end.dbc
     #ENDIF .IFDEF SOHDEF

     ENDROUTINE
.     ^ meta.function.dbc storage.type.routine.end.dbc - meta.compiler-directive
     IF (OVER
.            ^ meta.parens.if.dbc invalid.illegal.dbc

     ENDIF

     PACK CHAR4 WITH TEST,CHAR4,(CHOP CHAR2):
          (SQUEEZE TESTING),"UNFINISHED STRING
.                                             ^ string.quoted.double.dbc invalid.illegal.dbc

     CALL TEST WITH (CHOP (SQUEEZE CHAR1) AND :

. <- meta.parameters.parens.dbc invalid.illegal.dbc

     CONTINUE
.     ^ invalid.illegal.dbc
     ENDROUTINE
.     ^ invalid.illegal.dbc
     #INFALID
.     ^ invalid.illegal.dbc

     #ENDIF
.     ^ invalid.illegal.dbc

