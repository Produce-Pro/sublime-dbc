{ "name": "dbc",
  "scopeName": "source.dbc",
  "fileTypes": ["TXT","PRG","VRB"],
  "uuid": "822facbe-dd9d-4215-ab1d-d10a061a28ef",
  "patterns": [
	{
		"match": "^\\s+(INC)\\s*(.*)",
		"name": "meta.import.dbc",
		"captures": {
			"1": {
				"name" : "keyword.other.dbc"
			},
			"2": {
				"name" : "storage.modifier.import.dbc"
			}
		}
	},
	{

		"include": "#code"

	},

	{

	}
	],
	"repository": {
		"code": {
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"include": "#keywords"
				},
				{
					"include": "#functions"
				},
				{
					"include": "#strings"
				},
				{
					"include": "#all-types"
				}
			]
		},

		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.dbc",
					"match": "\\s+(LOOP|WHILE|DO|FOR|REPEAT|CONTINUE|BREAK|UNTIL)\\b"
				},
				{
					"name": "keyword.control.dbc",
					"match": "\\s+(RETURN|GOTO|CALL|PERFORM|BRANCH|CHAIN)\\s+"
				},
				{
					"name": "keyword.control.dbc",
					"match": "\\s+(IF|ELSE|ENDIF|SWITCH|ENDSWITCH|CASE|DEFAULT)\\b"
				},
				{
					"name": "keyword.control.dbc",
					"match": "\\s+#(IF|ELSE|ENDIF).*"
				},
				{
					"name": "keyword.operator.arithmetic.dbc",
					"match": "(\\-|\\+|\\*|\\/|%)"
				},
				{
					"name": "keyword.constant.numeric",
					"match": "\\b[0-9]+\\.*[0-9]*\\b"
				},
				{
					"name": "keyword.operator.logical.dbc",
					"match": "\\s(AND|OR|NOT)\\s"
				},
				{
					"name": "entity.name.function.dbc",
					"match": "\\s(ROUTINE|ENDROUTINE|LROUTINE|VERB)\\s"
				},
				{
					"name": "keyword.operator.comparison.dbc",
					"match": "(=|!=|<=|>=|<>|<|>)"
				},
				{
					"name": "meta.arrayindex.meta",
					"match": "(\\[|\\])"
				},
				{
					"name": "keyword.operator.assignment.dbc",
					"match": ","
				},
				{
					"name": "keyword.operator.assignment.dbc",
					"match": "\\s+(TO|FROM|WITH|OF|IN|INTO)\\s+"
				}
			]
		},

		"comments": {
			"patterns": [
				{
					"match": "^([\\.\\*\\+]).*",
					"name": "comment.line.dbc"
				},
				{
					"match": "\\s+(\\.).*",
					"name": "comment.line.empty.dbc"
				}
			]
		},

		"strings": {
			"patterns": [
				{
					"begin": "\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.dbc"
						}
					},
					"end": "\"",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.dbc"
						}
					},
					"name": "string.quoted.double.dbc",
					"patterns": [
						{
							"match": "#.",
							"name": "constant.character.escape.dbc"
						}
					]
				}
			]

		},

		"all-types": {
			"patterns": [
				{
					"include": "#primative-types"
				},
				{
					"include": "#flags"
				},
				{
					"include": "#verb-types"
				}
			]
		},

		"flags": {
			"patterns": [
				{
					"match": "(\\s|\\(|,)(EOS|OVER|EQUAL|LESS|NULL)(\\s|\\)|,)",
						"captures" : {
						"2" : { "name" : "storage.type.flags.dbc" }
					}
				},
				{
					"match": "\\s+(DEBUG)\\s+",
					"name": "storage.type.flags.dbc"
				}

			]
		},

		"verb-types": {
			"patterns": [
				{
					"match": "\\b(CVARLIT|NVARLIT|CVAR|NVAR|CNVARLIT|CNVAR|ANY|VAR|VARLIT)\\b(\\s|,|:)",
					"captures" : {
						"1" : { "name" : "storage.type.verb.dbc" }
					}
				},
				{
					"match": "\\b(LABEL|ARRAY|QUEUE|OBJECT)\\b(\\s|,|:)",
					"captures" : {
						"1" : { "name" : "storage.type.verb.dbc" }
					}
				},
				{
					"match": "\\b(CARRAY|NVARRAY|NARRAY)[1-3]\\b(\\s|,|:)",
					"captures" : {
						"1" : { "name" : "storage.type.verb.dbc" }
					}
				}

			]
		},


		"primative-types": {
			"patterns": [
				{
					"match": "\\s(?:CHAR|INT|FORM|DIM|NUM|INIT|EXTERNAL|EQU)\\s",
					"name": "storage.type.primative.dbc"
				},
				{
					"match": "\\s(LABEL|ARRAY|QUEUE|OBJECT)\\s",
					"name": "storage.type.primative.dbc"
				},
				{
					"match": "\\s(AFILE|IMAGE|FILE|IFILE|PFILE|DEVICE|RESOURCE|LIST)\\s",
					"name": "storage.type.primative.dbc"
				}


			]
		},

		"dbc-functions": {
			"patterns": [
				{
					"name": "entity.name.function.dbc",
					"match": "^\\s+(MOVE|PACK|UNPACK|CLEAR|LOAD|FILL|APPEND|CMOVE|SET)\\s+"
				},
				{
					"name": "entity.name.function.dbc",
					"match": "^\\s+(MOVEFPTR|MOVELPTR|BUMP|RESET|LENSET|REPLACE|REP|SETLPTR|SETFPTR)\\s+"
				},
				{
					"name": "entity.name.function.dbc",
					"match": "^\\s+(ADD|SUB|MULT|DIVIDE)\\s+"
				},
				{
					"name": "entity.name.function.dbc",
					"match": "^\\s+(SEARCH|SCAN|MATCH)\\s+"
				},
				{
					"name": "entity.name.function.dbc",
					"match": "^\\s+(SETFLAG|TYPE|FLAGSAVE|FLAGREST|ENDSET|PAUSE|TRAPCLR|TRAPSET|TRAPSAVE|TRAP)\\s+"
				},
				{
					"name": "entity.name.function.dbc",
					"match": "^\\s+(TESTADR|SETCVAR|SETNVAR|MOVEADR|CLEARADR|GETPARM|MOVELABEL|CLEARLABEL)\\s+"
				},
				{
					"name": "entity.name.function.dbc",
					"match": "^\\s+(WRITE|CLOSE|PREP|READ|OPEN|ERASE|ROLLOUT|REPOSIT)\\s+"
				},
				{
					"name": "entity.name.function.dbc",
					"match": "^\\s+(DISPLAY|SCRNSAVE|SCRNREST|DSPFNC|STATESAVE|STATEREST)\\s+"
				},
				{
					"name": "entity.name.function.dbc",
					"match": "\\b(CHOP|SQUEEZE|TRIM)\\s+"
				},
				{
					"name": "support.function.dbc",
					"match": "^\\s+\\b(.\\.)?QUERY\\..{3,5}\\s"
				},
				{
					"name": "support.function.dbc",
					"match": "\\b\\b(.\\.)?NEXT\\..{3,5}\\s"
				},
				{
					"name": "support.function.dbc",
					"match": "^\\s+(TSTAMP|DATE|ELAPSED)\\b"
				},
				{
					"name": "support.function.dbc",
					"match": "^\\s+(LMOD|ULMOD)\\s+"
				},
				{
					"name": "support.function.dbc",
					"match": "^\\s+(NOBLANK|NOZERO)\\s+"
				},
				{
					"name": "support.function.dbc",
					"match": "^\\s+(RETURN.EOS|RETURN.NOTEOS)\\s+"
				}


			]
		},


		"functions": {
			"patterns": [
				{
					"include": "#dbc-functions"
				}
			]
		}


	}
}
